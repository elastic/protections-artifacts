[rule]
description = """
Detects network connections originating from a binary located in a potentially suspicious location, followed by a file
creation event. This behavior is consistent with C2 agents such as Poseidon and Athena, connecting to a C2 framework
such as Mythic. The agent polls the C2 for commands through a web request, after which the command gets executed.
"""
id = "08ad673a-7f99-417e-8b93-a79d4faeeed3"
license = "Elastic License v2"
name = "Network Connection Followed by File Creation"
os_list = ["linux"]
version = "1.0.11"

query = '''
sequence by process.entity_id with maxspan=5s
  [network where event.type == "start" and event.action == "connection_attempted" and process.executable : (
     "/boot/*", "/dev/shm/*", "/etc/cron.*/*", "/etc/init.d/*", "/etc/update-motd.d/*", "/tmp/*", "/var/log/*"
   ) and not (
      process.executable : "/tmp/*/*" or
      destination.ip == null or
      destination.ip == "0.0.0.0" or 
      cidrmatch(
        destination.ip, "10.0.0.0/8", "127.0.0.0/8", "169.254.0.0/16", "172.16.0.0/12",
        "192.0.0.0/24", "192.0.0.0/29","192.0.0.8/32", "192.0.0.9/32", "192.0.0.10/32",
        "192.0.0.170/32", "192.0.0.171/32", "192.0.2.0/24", "192.31.196.0/24", "192.52.193.0/24",
        "192.168.0.0/16", "192.88.99.0/24", "224.0.0.0/4", "100.64.0.0/10", "192.175.48.0/24",
        "198.18.0.0/15", "198.51.100.0/24", "203.0.113.0/24", "240.0.0.0/4", "::1", "FE80::/10",
        "FF00::/8"
      )
    ) and not process.executable : "/merged/var/lib/containers/*"
  ]
  [file where event.type == "creation" and process.executable : (
     "/boot/*", "/dev/shm/*", "/etc/cron.*/*", "/etc/init.d/*", "/etc/update-motd.d/*", "/tmp/*", "/var/log/*"
    ) and not (
      file.name : "tmp*" or file.extension in ("sqlite-journal", "db-journal", "lockfile", "tmp") or
      file.path : (
        "/home/*", "/tmp/*/*", "/loki/wal/*", "/dev/shm/.org.chromium.Chromium.*", "/opt/rapid7/nexpose/*",
        "/usr/local/ltechagent*", "/var/lib/cloudendure/agent_keystore_temp", "/var/cache/yum/*",
        "/run/aws-node/ipam.json.tmp*", "/run/systemd/journal/streams/.*"
      ) or
      (process.executable == "/tmp/terraform" and file.path like "/tmp/terraform-provider*") or 
      process.name in ("podman", "minikube", "logrotate", "java", "aws-k8s-agent", "grafana", "postman") or
      process.executable : (
        "/etc/cron.daily/logrotate", "/etc/update-motd.d/50-motd-news", "/etc/cron.hourly/0yum-hourly.cron",
        "/etc/cron.hourly/BitdefenderRedline", "/tmp/token_handler", "/tmp/.sentry-cli*.exe", 
        "/etc/cron.daily/0yum-daily.cron", "/etc/init.d/fortiedr"
      )
    )
  ]
'''

min_endpoint_version = "7.15.0"
optional_actions = []
[[actions]]
action = "kill_process"
field = "process.entity_id"
state = 0

[[threat]]
framework = "MITRE ATT&CK"
[[threat.technique]]
id = "T1059"
name = "Command and Scripting Interpreter"
reference = "https://attack.mitre.org/techniques/T1059/"
[[threat.technique.subtechnique]]
id = "T1059.004"
name = "Unix Shell"
reference = "https://attack.mitre.org/techniques/T1059/004/"



[threat.tactic]
id = "TA0002"
name = "Execution"
reference = "https://attack.mitre.org/tactics/TA0002/"
[[threat]]
framework = "MITRE ATT&CK"
[[threat.technique]]
id = "T1071"
name = "Application Layer Protocol"
reference = "https://attack.mitre.org/techniques/T1071/"
[[threat.technique.subtechnique]]
id = "T1071.001"
name = "Web Protocols"
reference = "https://attack.mitre.org/techniques/T1071/001/"



[threat.tactic]
id = "TA0011"
name = "Command and Control"
reference = "https://attack.mitre.org/tactics/TA0011/"

[internal]
min_endpoint_version = "7.15.0"
